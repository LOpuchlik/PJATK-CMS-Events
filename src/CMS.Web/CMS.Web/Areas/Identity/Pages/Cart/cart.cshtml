@page "/Cart/cart"
@{

}
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@using CMS.Web.Models
@using CMS.Web.Services

@model CMS.Web.Areas.Identity.Pages.Cart.CartModel

<!DOCTYPE html>

<html lang='en'>

<head>
    <meta charset='utf-8' />
    <meta name="viewport" content="width=device-width" />
    
</head>

<body>
    <br />
    <br />
    <div class="container rpw p-0 m-0">
        <div class="col-12">
            <h2 class="text-primary"> @Localizer["Cart"] </h2>
        </div>

        <div class="col-12" style="text-align:center">
            <br />

        </div>
        <div class="col-12 border p-3" style="text-align:center">

            <table id="purchases" class="table table-striped table-bordered" style="width:100%">
                <thead>
                <tr>
                    <th> @Localizer["EventPicture"] </th>
                    <th> @Localizer["EventName"] </th>
                    <th> @Localizer["EventPrice"] </th>
                    <th> @Localizer["NumberOfTickets"] </th>
                    <th> @Localizer["SumPrice"]</th>
                </tr>
                </thead>

                <!--
                TO DO
                i to poniżej jakoś w pętli foreach i dla każdego z eventu pobranego na podstawie Id z JS_arraya ids ładować zdjęcie (zwymiarowane do małego prostokącika,
                nazwę, cenę jednostkową biletu, liczbę biletów (wyciągać spod tego samego indeksu z JS_arraya quants) i kwotę całokowitą za dany event poprzez pomnozenie dwoch poprzednich.-->

                @{
                    var dict = new SortedDictionary<int, int>();
                    int key, val;
                    foreach (var cookie in HttpContext.Request.Cookies)
                    {
                        if (int.TryParse(@cookie.Key, out key) && int.TryParse(@cookie.Value, out val))
                        {
                            dict.Add(key, val);
                        }
                    }
                    
                    var selectedEvents = Model.Events.Where(e => dict.ContainsKey(e.ID));

                    foreach (var e in selectedEvents)
                    {
                        var quant = dict[e.ID];
                    var totalPrice = e.TicketPrice * quant; 
                        <tr>
                            <th> @e.PhotoPath </th>
                            <th> @e.Name </th>
                            <th> @e.TicketPrice</th>
                            <th> @quant</th>
                            <th> @totalPrice </th>
                        </tr>
                    }
                }
                }
                
                
               
                <!-- tyle wierszy będzie dodane jaka jest długość arraya ids lub quants -->
            </table>

            <div class="col-12">
                <p>@Localizer["TotalPrice"]</p>
                <a class="btn btn-primary" href="/cart/checkout" role="button"> @Localizer["Checkout"]</a>
                <a class="btn btn-primary" href="/home/index" role="button"> @Localizer["Abort"] </a>
            </div>
        </div>
        

    </div>
</body>
</html>

